server:
  port: 9000

spring:
  application:
    name: gateway
    version: 1.0.0

  reactor:
    context-propagation: auto

  banner:
    charset: UTF-8
    location: classpath:banner.txt

  config:
    import:
      - classpath:imports/gateway.cors.yml
      - classpath:imports/gateway.session.yml
      - classpath:imports/gateway.datasource.yml
      - classpath:imports/gateway.route.yml
      - classpath:imports/gateway.security.yml
      - classpath:imports/gateway.frontend.yml
  cloud:
    gateway:
      httpserver:
        wiretap: true
      predicate:
        remote-addr:
          enabled: true
      global-filter:
        websocket-routing:
          enabled: true
      httpclient:
        connect-timeout: 30000
        wiretap: true

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        show_sql: false
        format_sql: false

logging:
  level:
    root: warn
#    org.springframework.web.reactive.function.client.ExchangeFunctions: debug
#    org.springframework.security.oauth2.client: debug
#    org.springframework.security.oauth2.client.endpoint: debug
#    org.springframework.security.oauth2.client.web.reactive.function.client.ServerOAuth2AuthorizedClientExchangeFilterFunction: debug
#    org.springframework.security.oauth2.jwt: debug
#    reactor.netty.http.client: debug
    by.sorface.gateway:
      filter.LoggingGatewayFilterFactory: debug
      service.RedisReactiveOidcSessionRepository: info
      config.security.handlers.TokenRefreshLogoutHandler: debug

management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0
    propagation:
      type: b3
  endpoints:
    web:
      exposure:
        include: '*'
    enabled-by-default: true
  observations:
    annotations:
      enabled: true

---

# docker profile configuration

spring:
  config:
    activate:
      on-profile: development


management:
  endpoints:
    web:
      exposure:
        include: '*'
    enabled-by-default: true

---

spring:
  config:
    activate:
      on-profile: kube

  cloud:
    kubernetes:
      loadbalancer:
        mode: service
        enabled: true
      discovery:
        enabled: true
        cache-loading-timeout-seconds: 60